version: '3'
services:
  elasticsearch:
    build:
      context: build/elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    image: jangrui/elasticsearch:$ELK_VERSION
    container_name: elk-elasticsearch
    restart: unless-stopped
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
      # - ./elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      TZ: Asia/Shanghai
      node.name: es
      cluster.name: docker-cluster
      discovery.type: single-node
      network.host: 0.0.0.0
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      bootstrap.memory_lock: "true"
      ELASTIC_PASSWORD: changeme
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    build:
      context: build/kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    image: jangrui/kibana:$ELK_VERSION
    container_name: elk-kibana
    restart: unless-stopped
    depends_on:
      - elasticsearch
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - "5601:5601"
    environment: 
      TZ: Asia/Shanghai

  logstash:
    build:
      context: build/logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    image: jangrui/logstash:$ELK_VERSION
    container_name: elk-logstash
    restart: unless-stopped
    # depends_on:
      # - elasticsearch
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "9600:9600"
    environment:
      TZ: Asia/Shanghai
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
      bootstrap.memory_lock: "true"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  redis:
    image: redis:alpine
    container_name: elk-reids
    restart: unless-stopped
    hostname: $HOSTNAME
    environment: 
      TZ: Asia/Shanghai
    ports: 
      - 6379:6379
    volumes: 
      - redis:/data
      # - ./redis:/data
    command: 
      redis-server --requirepass changeme --appendonly yes

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: elk-zk
    restart: unless-stopped
    # hostname: $HOSTNAME
    ports:
      - 2181:2181
    volumes: 
      - zk:/bitnami/zookeeper
    environment:
      TZ: Asia/Shanghai
      # ZOO_TICK_TIME: 2000
      # ZOO_INIT_LIMIT: 5
      # ZOO_SYNC_LIMIT: 2
      ZOO_ENABLE_AUTH: "yes"
      ZOO_SERVER_USERS: kafka
      ZOO_SERVER_PASSWORDS: kafka_password

  kafka:
    image: bitnami/kafka:latest
    container_name: elk-kafka
    restart: unless-stopped
    # hostname: $HOSTNAME
    user: root
    ports:
      - 9092:9092
    volumes: 
      - kafka:/bitnami/kafka
    environment:
      - TZ=Asia/Shanghai
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://kafka:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://kafka:9092
      - KAFKA_ZOOKEEPER_USER=kafka
      - KAFKA_ZOOKEEPER_PASSWORD=kafka_password
      # KAFKA_CREATE_TOPICS: filebeat

  filebeat:
    build: 
      context: build/filebeat/
      args: 
        ELK_VERSION: $ELK_VERSION
    image: jangrui/filebeat:$ELK_VERSION
    container_name: elk-filebeat
    restart: unless-stopped
    hostname: filebeat
    user: root
    privileged: true
    environment: 
      TZ: Asia/Shanghai
      strict.perms: "false"
    volumes: 
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/container:/var/lib/docker/container:ro
      - /var/log:/var/log:ro
      # - ./log:/var/log:ro

volumes: 
  elasticsearch:
  redis:
  zk:
  kafka:
